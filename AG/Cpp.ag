module {AG.Cpp} {} {}

type CppExprs = [CppExpr]
type CppStmts = [CppStmt]

data CppExpr
    | Call f :: String
           x :: CppExprs
    | Var x :: String
    | Num x :: Int

data CppStmt
    | FunDef rt :: String
             name :: String
             body :: CppStmt -- assume Block
    | Block body :: CppStmts
    | Include file :: String
    | VarDef name :: String
             init :: CppExpr
    | Expr   expr :: CppExpr

data CppDoc
    | File stmts :: CppStmts

deriving CppExpr : Eq
deriving CppExprs : Eq
deriving CppStmt : Eq
deriving CppStmts : Eq
